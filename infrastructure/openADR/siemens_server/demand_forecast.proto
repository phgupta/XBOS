syntax = "proto3";

option java_multiple_files = true;

package demand_forecast;

// The demand_forecast service definition.
service DemandForecast {
  // A simple RPC.
  //
  // Sends pricing information for a given building, within a duration (start, end), and a requested window
  // Returns forecasted demand consumption based on the given price
  // An error is returned if there are no prediction for the given request
  rpc GetDemandForecast (DemandForecastRequest) returns (DemandForecastReply) {}
}

// DemandPoint are represented as a float per unit (e.g., 45.4 kWh) starting at a given time for a given duration
message DemandPoint {
  int64 time = 1;
  // The duration window for the demand (e.g., 10s, 15m, 1h)
  string duration = 2;
  double demand = 3;
  string unit = 4;
}

// PricePoint are represented as a float per unit (e.g., 0.84 $/kWh) starting at a given time for a given duration
message PricePoint {
  int64 time = 1;
  // The duration window for the price (e.g., 10s, 15m, 1h)
  string duration = 2;
  double price = 3;
  string unit = 4;
}


// The request message containing the requested pricing information.
message DemandForecastRequest {
  // The name of the building
  string building = 1;

  // The start time in Unixnanoseconds
  int64 start = 2;

  // The end time in Unixnanoseconds
  int64 end = 3;

  // the pricing information for that period
  repeated PricePoint prices = 4;
}

// The response message containing the temperatures
message DemandForecastReply {
  repeated DemandPoint demands = 1;
}
