// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demand_forecast.proto

package main

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DemandPoint are represented as a float per unit (e.g., 45.4 kWh) starting at a given time for a given duration
type DemandPoint struct {
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// The duration window for the demand (e.g., 10s, 15m, 1h)
	Duration             string   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Demand               float64  `protobuf:"fixed64,3,opt,name=demand,proto3" json:"demand,omitempty"`
	Unit                 string   `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemandPoint) Reset()         { *m = DemandPoint{} }
func (m *DemandPoint) String() string { return proto.CompactTextString(m) }
func (*DemandPoint) ProtoMessage()    {}
func (*DemandPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3b9da869673370, []int{0}
}

func (m *DemandPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemandPoint.Unmarshal(m, b)
}
func (m *DemandPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemandPoint.Marshal(b, m, deterministic)
}
func (m *DemandPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemandPoint.Merge(m, src)
}
func (m *DemandPoint) XXX_Size() int {
	return xxx_messageInfo_DemandPoint.Size(m)
}
func (m *DemandPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DemandPoint.DiscardUnknown(m)
}

var xxx_messageInfo_DemandPoint proto.InternalMessageInfo

func (m *DemandPoint) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *DemandPoint) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *DemandPoint) GetDemand() float64 {
	if m != nil {
		return m.Demand
	}
	return 0
}

func (m *DemandPoint) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

// PricePoint are represented as a float per unit (e.g., 0.84 $/kWh) starting at a given time for a given duration
type PricePoint struct {
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// The duration window for the price (e.g., 10s, 15m, 1h)
	Duration             string   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Unit                 string   `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PricePoint) Reset()         { *m = PricePoint{} }
func (m *PricePoint) String() string { return proto.CompactTextString(m) }
func (*PricePoint) ProtoMessage()    {}
func (*PricePoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3b9da869673370, []int{1}
}

func (m *PricePoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PricePoint.Unmarshal(m, b)
}
func (m *PricePoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PricePoint.Marshal(b, m, deterministic)
}
func (m *PricePoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PricePoint.Merge(m, src)
}
func (m *PricePoint) XXX_Size() int {
	return xxx_messageInfo_PricePoint.Size(m)
}
func (m *PricePoint) XXX_DiscardUnknown() {
	xxx_messageInfo_PricePoint.DiscardUnknown(m)
}

var xxx_messageInfo_PricePoint proto.InternalMessageInfo

func (m *PricePoint) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *PricePoint) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *PricePoint) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PricePoint) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

// The request message containing the requested pricing information.
type DemandForecastRequest struct {
	// The name of the building
	Building string `protobuf:"bytes,1,opt,name=building,proto3" json:"building,omitempty"`
	// The start time in Unixnanoseconds
	Start int64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// The end time in Unixnanoseconds
	End int64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	// the pricing information for that period
	Prices               []*PricePoint `protobuf:"bytes,4,rep,name=prices,proto3" json:"prices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DemandForecastRequest) Reset()         { *m = DemandForecastRequest{} }
func (m *DemandForecastRequest) String() string { return proto.CompactTextString(m) }
func (*DemandForecastRequest) ProtoMessage()    {}
func (*DemandForecastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3b9da869673370, []int{2}
}

func (m *DemandForecastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemandForecastRequest.Unmarshal(m, b)
}
func (m *DemandForecastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemandForecastRequest.Marshal(b, m, deterministic)
}
func (m *DemandForecastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemandForecastRequest.Merge(m, src)
}
func (m *DemandForecastRequest) XXX_Size() int {
	return xxx_messageInfo_DemandForecastRequest.Size(m)
}
func (m *DemandForecastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DemandForecastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DemandForecastRequest proto.InternalMessageInfo

func (m *DemandForecastRequest) GetBuilding() string {
	if m != nil {
		return m.Building
	}
	return ""
}

func (m *DemandForecastRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *DemandForecastRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *DemandForecastRequest) GetPrices() []*PricePoint {
	if m != nil {
		return m.Prices
	}
	return nil
}

// The response message containing the temperatures
type DemandForecastReply struct {
	Demands              []*DemandPoint `protobuf:"bytes,1,rep,name=demands,proto3" json:"demands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DemandForecastReply) Reset()         { *m = DemandForecastReply{} }
func (m *DemandForecastReply) String() string { return proto.CompactTextString(m) }
func (*DemandForecastReply) ProtoMessage()    {}
func (*DemandForecastReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3b9da869673370, []int{3}
}

func (m *DemandForecastReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemandForecastReply.Unmarshal(m, b)
}
func (m *DemandForecastReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemandForecastReply.Marshal(b, m, deterministic)
}
func (m *DemandForecastReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemandForecastReply.Merge(m, src)
}
func (m *DemandForecastReply) XXX_Size() int {
	return xxx_messageInfo_DemandForecastReply.Size(m)
}
func (m *DemandForecastReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DemandForecastReply.DiscardUnknown(m)
}

var xxx_messageInfo_DemandForecastReply proto.InternalMessageInfo

func (m *DemandForecastReply) GetDemands() []*DemandPoint {
	if m != nil {
		return m.Demands
	}
	return nil
}

func init() {
	proto.RegisterType((*DemandPoint)(nil), "demand_forecast.DemandPoint")
	proto.RegisterType((*PricePoint)(nil), "demand_forecast.PricePoint")
	proto.RegisterType((*DemandForecastRequest)(nil), "demand_forecast.DemandForecastRequest")
	proto.RegisterType((*DemandForecastReply)(nil), "demand_forecast.DemandForecastReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemandForecastClient is the client API for DemandForecast service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemandForecastClient interface {
	// A simple RPC.
	//
	// Sends pricing information for a given building, within a duration (start, end), and a requested window
	// Returns forecasted demand consumption based on the given price
	// An error is returned if there are no prediction for the given request
	GetDemandForecast(ctx context.Context, in *DemandForecastRequest, opts ...grpc.CallOption) (*DemandForecastReply, error)
}

type demandForecastClient struct {
	cc *grpc.ClientConn
}

func NewDemandForecastClient(cc *grpc.ClientConn) DemandForecastClient {
	return &demandForecastClient{cc}
}

func (c *demandForecastClient) GetDemandForecast(ctx context.Context, in *DemandForecastRequest, opts ...grpc.CallOption) (*DemandForecastReply, error) {
	out := new(DemandForecastReply)
	err := c.cc.Invoke(ctx, "/demand_forecast.DemandForecast/GetDemandForecast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemandForecastServer is the server API for DemandForecast service.
type DemandForecastServer interface {
	// A simple RPC.
	//
	// Sends pricing information for a given building, within a duration (start, end), and a requested window
	// Returns forecasted demand consumption based on the given price
	// An error is returned if there are no prediction for the given request
	GetDemandForecast(context.Context, *DemandForecastRequest) (*DemandForecastReply, error)
}

func RegisterDemandForecastServer(s *grpc.Server, srv DemandForecastServer) {
	s.RegisterService(&_DemandForecast_serviceDesc, srv)
}

func _DemandForecast_GetDemandForecast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DemandForecastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemandForecastServer).GetDemandForecast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demand_forecast.DemandForecast/GetDemandForecast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemandForecastServer).GetDemandForecast(ctx, req.(*DemandForecastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemandForecast_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demand_forecast.DemandForecast",
	HandlerType: (*DemandForecastServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDemandForecast",
			Handler:    _DemandForecast_GetDemandForecast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demand_forecast.proto",
}

func init() { proto.RegisterFile("demand_forecast.proto", fileDescriptor_fc3b9da869673370) }

var fileDescriptor_fc3b9da869673370 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcd, 0x4a, 0xfb, 0x40,
	0x14, 0xc5, 0xff, 0xd3, 0xc9, 0x3f, 0xda, 0x5b, 0xf0, 0x63, 0xb4, 0x32, 0x54, 0x17, 0x21, 0x88,
	0x64, 0xd5, 0x45, 0x0b, 0x3e, 0x80, 0x88, 0xae, 0x84, 0x30, 0x2f, 0x20, 0x69, 0x32, 0x95, 0x81,
	0x34, 0x89, 0xc9, 0x9d, 0x45, 0xdf, 0xc2, 0x47, 0x96, 0xf9, 0xb0, 0xea, 0xa8, 0x08, 0xee, 0xee,
	0xb9, 0x9c, 0xf9, 0x9d, 0x9c, 0xc9, 0xc0, 0xb4, 0x92, 0x9b, 0xa2, 0xa9, 0x1e, 0xd7, 0x6d, 0x2f,
	0xcb, 0x62, 0xc0, 0x79, 0xd7, 0xb7, 0xd8, 0xb2, 0xc3, 0x60, 0x9d, 0x2a, 0x98, 0xdc, 0xda, 0x55,
	0xde, 0xaa, 0x06, 0x19, 0x83, 0x08, 0xd5, 0x46, 0x72, 0x92, 0x90, 0x8c, 0x0a, 0x3b, 0xb3, 0x19,
	0xec, 0x57, 0xba, 0x2f, 0x50, 0xb5, 0x0d, 0x1f, 0x25, 0x24, 0x1b, 0x8b, 0x9d, 0x66, 0x67, 0x10,
	0x3b, 0x22, 0xa7, 0x09, 0xc9, 0x88, 0xf0, 0xca, 0x70, 0x74, 0xa3, 0x90, 0x47, 0xd6, 0x6f, 0xe7,
	0x74, 0x0d, 0x90, 0xf7, 0xaa, 0x94, 0x7f, 0x4b, 0x3a, 0x85, 0xff, 0x9d, 0x39, 0xed, 0x83, 0x9c,
	0xf8, 0x36, 0xe7, 0x85, 0xc0, 0xd4, 0x75, 0xba, 0xf3, 0x2d, 0x85, 0x7c, 0xd6, 0x72, 0x40, 0xc3,
	0x5f, 0x69, 0x55, 0x57, 0xaa, 0x79, 0xb2, 0xb9, 0x63, 0xb1, 0xd3, 0x86, 0x3f, 0x60, 0xd1, 0xa3,
	0x0d, 0xa6, 0xc2, 0x09, 0x76, 0x04, 0x54, 0xfa, 0x72, 0x54, 0x98, 0x91, 0x2d, 0x21, 0xb6, 0xd1,
	0x03, 0x8f, 0x12, 0x9a, 0x4d, 0x16, 0xe7, 0xf3, 0xf0, 0xa6, 0xdf, 0x4b, 0x0a, 0x6f, 0x4d, 0x1f,
	0xe0, 0x24, 0xfc, 0xa2, 0xae, 0xde, 0xb2, 0x6b, 0xd8, 0x73, 0x87, 0x07, 0x4e, 0x2c, 0xec, 0xe2,
	0x0b, 0xec, 0xc3, 0xcf, 0x11, 0x6f, 0xe6, 0x85, 0x86, 0x83, 0xcf, 0x38, 0x56, 0xc2, 0xf1, 0xbd,
	0xc4, 0x60, 0x79, 0xf5, 0x03, 0x2d, 0xb8, 0x96, 0xd9, 0xe5, 0xaf, 0xbe, 0xae, 0xde, 0xa6, 0xff,
	0x6e, 0x46, 0x39, 0x59, 0xc5, 0xf6, 0x1d, 0x2d, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x21, 0x1f,
	0x80, 0xc0, 0x60, 0x02, 0x00, 0x00,
}
